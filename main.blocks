<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="5=*yDaPXxR/d,e}3BD^s" x="57" y="120"><statement name="HANDLER"><block type="typescript_statement" id="?K.^?)SA8X/QAS|EeXr@"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace custom {" line1="" line2="    // センサーの方向（左・右）を選択するための設定" line3="    export enum SensorDirection {" line4="        //% block=&quot;右&quot;" line5="        Right," line6="        //% block=&quot;左&quot;" line7="        Left" line8="    }" line9="" line10="    // ここからモーター制御のブロック" line11="    // ===================================" line12="" line13="    /**" line14="     * 指定した速さで直進します。左右のタイヤが同じ速度で回転します。" line15="     * @param speed 回転速度 (0-1023)。例: 800" line16="     */" line17="    //% block=&quot;直進する 速さ %speed&quot;" line18="    //% speed.min=0 speed.max=1023" line19="    //% group=&quot;モーター制御&quot;" line20="    export function goStraight(speed: number): void {" line21="        // 右のタイヤ（P13）を指定された速度で回転" line22="        pins.analogWritePin(AnalogPin.P13, speed);" line23="        // 左のタイヤ（P15）を指定された速度で回転" line24="        pins.analogWritePin(AnalogPin.P15, speed);" line25="    }" line26="" line27="    /**" line28="     * 指定した速さで右に曲がります。右のタイヤのみが回転し、左のタイヤは停止します。" line29="     * @param speed 右のタイヤの回転速度 (0-1023)。例: 512" line30="     */" line31="    //% block=&quot;右折する 速さ %speed&quot;" line32="    //% speed.min=0 speed.max=1023" line33="    //% group=&quot;モーター制御&quot;" line34="    export function turnRight(speed: number): void {" line35="        // 右のタイヤ（P13）を指定された速度で回転" line36="        pins.analogWritePin(AnalogPin.P13, speed);" line37="        // 左のタイヤ（P15）を停止" line38="        pins.analogWritePin(AnalogPin.P15, 0);" line39="    }" line40="" line41="    /**" line42="     * 指定した速さで左に曲がります。左のタイヤのみが回転し、右のタイヤは停止します。" line43="     * @param speed 左のタイヤの回転速度 (0-1023)。例: 512" line44="     */" line45="    //% block=&quot;左折する 速さ %speed&quot;" line46="    //% speed.min=0 speed.max=1023" line47="    //% group=&quot;モーター制御&quot;" line48="    export function turnLeft(speed: number): void {" line49="        // 左のタイヤ（P15）を指定された速度で回転" line50="        pins.analogWritePin(AnalogPin.P15, speed);" line51="        // 右のタイヤ（P13）を停止" line52="        pins.analogWritePin(AnalogPin.P13, 0);" line53="    }" line54="" line55="" line56="    // ここからセンサーのブロック" line57="    // ===================================" line58="" line59="    /**" line60="     * 指定した方向のセンサーが白を検出したかどうかを判定します。" line61="     * センサーのアナログ値が700未満の場合に「白」と判定します。" line62="     * @param direction 判定するセンサーの方向（右:P0, 左:P1）" line63="     */" line64="    //% block=&quot;%direction のセンサが白だったら&quot;" line65="    //% group=&quot;センサー&quot;" line66="    export function isWhite(direction: SensorDirection): boolean {" line67="        const threshold = 700; // 白と判定するアナログ値のしきい値" line68="        let sensorValue = 0;" line69="" line70="        if (direction == SensorDirection.Left) {" line71="            // 左センサー (P1) の値を読み取る" line72="            sensorValue = pins.analogReadPin(AnalogPin.P1);" line73="        } else {" line74="            // 右センサー (P0) の値を読み取る" line75="            sensorValue = pins.analogReadPin(AnalogPin.P0);" line76="        }" line77="" line78="        // センサーの値がしきい値未満なら true (白)、そうでなければ false を返す" line79="        return sensorValue &lt; threshold;" line80="    }" line81="}" numlines="82"></mutation></block></statement></block><block type="custom_turnLeft" id=")5KZq[T`_@RgLZA/rthc" disabled-reasons="ORPHANED_BLOCK,MANUALLY_DISABLED" x="-363" y="214"><value name="speed"><shadow type="math_number_minmax" id="J:lGgA1[zS*qI.,D,BKV" disabled-reasons="MANUALLY_DISABLED"><mutation min="0" max="1023" label="Speed" precision="0"></mutation><field name="SLIDER">0</field></shadow></value></block><block type="device_forever" id="2D0/ne,tpqC|Q*u~vGP_" x="-558" y="431"><statement name="HANDLER"><block type="controls_if" id="yn51OD=_Z|G;=aWZNBvj"><mutation elseif="1" else="1"></mutation><value name="IF0"><shadow type="logic_boolean" id="c=kv55r0Sl6NHtiXjp,2"><field name="BOOL">TRUE</field></shadow><block type="custom_isWhite" id="z~3QuaU+6w(D[Qw;@ko0"><field name="direction">custom.SensorDirection.Right</field></block></value><value name="IF1"><shadow type="logic_boolean" id="D12(afTtcyf0MdMx*cr="><field name="BOOL">FALSE</field></shadow><block type="custom_isWhite" id="h/h*qTy.J5^!iKXf88$E"><field name="direction">custom.SensorDirection.Right</field></block></value></block></statement></block></xml>