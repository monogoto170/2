<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="BfXE^W0SZlQhuVc-p+#-" x="55" y="57"><statement name="HANDLER"><block type="typescript_statement" id="2$^CdAKQGfx?/AR8.0|["><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace custom {" line1="" line2="    // センサーの方向（左・右）を選択するための設定" line3="    export enum SensorDirection {" line4="        //% block=&quot;右&quot;" line5="        Right," line6="        //% block=&quot;左&quot;" line7="        Left" line8="    }" line9="" line10="    // ===================================" line11="    // ここからモーター制御のブロック" line12="    // ===================================" line13="" line14="    /**" line15="     * 指定した速さで直進します。左右のタイヤが同じ速度で回転します。" line16="     * @param speed 回転速度 (0-1023)。例: 800" line17="     */" line18="    //% block=&quot;直進する 速さ %speed&quot;" line19="    //% speed.min=0 speed.max=1023" line20="    //% group=&quot;モーター制御&quot;" line21="    export function goStraight(speed: number): void {" line22="        // 右のタイヤ（P13）を指定された速度で回転" line23="        pins.analogWritePin(AnalogPin.P13, speed);" line24="        // 左のタイヤ（P15）を指定された速度で回転" line25="        pins.analogWritePin(AnalogPin.P15, speed);" line26="    }" line27="" line28="    /**" line29="     * 指定した速さで右に曲がります。右のタイヤのみが回転し、左のタイヤは停止します。" line30="     * @param speed 右のタイヤの回転速度 (0-1023)。例: 512" line31="     */" line32="    //% block=&quot;右折する 速さ %speed&quot;" line33="    //% speed.min=0 speed.max=1023" line34="    //% group=&quot;モーター制御&quot;" line35="    export function turnRight(speed: number): void {" line36="        // 右のタイヤ（P13）を指定された速度で回転" line37="        pins.analogWritePin(AnalogPin.P13, speed);" line38="        // 左のタイヤ（P15）を停止" line39="        pins.analogWritePin(AnalogPin.P15, 0);" line40="    }" line41="" line42="    /**" line43="     * 指定した速さで左に曲がります。左のタイヤのみが回転し、右のタイヤは停止します。" line44="     * @param speed 左のタイヤの回転速度 (0-1023)。例: 512" line45="     */" line46="    //% block=&quot;左折する 速さ %speed&quot;" line47="    //% speed.min=0 speed.max=1023" line48="    //% group=&quot;モーター制御&quot;" line49="    export function turnLeft(speed: number): void {" line50="        // 左のタイヤ（P15）を指定された速度で回転" line51="        pins.analogWritePin(AnalogPin.P15, speed);" line52="        // 右のタイヤ（P13）を停止" line53="        pins.analogWritePin(AnalogPin.P13, 0);" line54="    }" line55="" line56="" line57="    // ===================================" line58="    // ここからセンサーのブロック" line59="    // ===================================" line60="" line61="    /**" line62="     * 指定した方向のセンサーが黒を検出したかどうかを判定します。" line63="     * センサーのアナログ値が700以上の場合に「黒」と判定します。" line64="     * @param direction 判定するセンサーの方向（右:P0, 左:P1）" line65="     */" line66="    //% block=&quot;%direction のセンサが黒だったら&quot;" line67="    //% group=&quot;センサー&quot;" line68="    export function isBlack(direction: SensorDirection): boolean {" line69="        const threshold = 700; // 黒と判定するアナログ値のしきい値（この値は環境に応じて調整してください）" line70="        let sensorValue = 0;" line71="" line72="        if (direction == SensorDirection.Left) {" line73="            // 左センサー (P1) の値を読み取る" line74="            sensorValue = pins.analogReadPin(AnalogPin.P1);" line75="        } else {" line76="            // 右センサー (P0) の値を読み取る" line77="            sensorValue = pins.analogReadPin(AnalogPin.P0);" line78="        }" line79="" line80="        // センサーの値がしきい値以上なら true (黒)、そうでなければ false を返す" line81="        return sensorValue &gt;= threshold;" line82="    }" line83="}" numlines="84"></mutation></block></statement></block></xml>