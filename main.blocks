<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="XcZ9s$^[jTzs!cZJC?FP" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="JO|LkeV#Z?Pw;`!B%/@s"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace custom {" line1="" line2="    // ▼▼▼▼▼ 修正箇所 ▼▼▼▼▼" line3="    // センサーの方向（左・右）を選択するための設定を、namespaceの中に移動しました。" line4="    export enum SensorDirection {" line5="        //% block=&quot;右&quot;" line6="        Right," line7="        //% block=&quot;左&quot;" line8="        Left" line9="    }" line10="    // ▲▲▲▲▲ 修正箇所 ▲▲▲▲▲" line11="" line12="" line13="    // ここからモーター制御のブロック" line14="    // ===================================" line15="" line16="    /**" line17="     * 指定した速さで右に曲がります。右のタイヤのみが回転し、左のタイヤは停止します。" line18="     * @param speed 右のタイヤの回転速度 (0-1023)。例: 512" line19="     */" line20="    //% block=&quot;右折する 速さ %speed&quot;" line21="    //% speed.min=0 speed.max=1023" line22="    //% group=&quot;モーター制御&quot;" line23="    export function turnRight(speed: number): void {" line24="        // 右のタイヤ（P13）を指定された速度でアナログ出力で回転させる" line25="        pins.analogWritePin(AnalogPin.P13, speed);" line26="        // 左のタイヤ（P15）を停止させる" line27="        pins.analogWritePin(AnalogPin.P15, 0);" line28="    }" line29="" line30="    /**" line31="     * 指定した速さで左に曲がります。左のタイヤのみが回転し、右のタイヤは停止します。" line32="     * @param speed 左のタイヤの回転速度 (0-1023)。例: 512" line33="     */" line34="    //% block=&quot;左折する 速さ %speed&quot;" line35="    //% speed.min=0 speed.max=1023" line36="    //% group=&quot;モーター制御&quot;" line37="    export function turnLeft(speed: number): void {" line38="        // 左のタイヤ（P15）を指定された速度でアナログ出力で回転させる" line39="        pins.analogWritePin(AnalogPin.P15, speed);" line40="        // 右のタイヤ（P13）を停止させる" line41="        pins.analogWritePin(AnalogPin.P13, 0);" line42="    }" line43="" line44="" line45="    // ここからセンサーのブロック" line46="    // ===================================" line47="" line48="    /**" line49="     * 指定した方向のセンサーが白を検出したかどうかを判定します。" line50="     * センサーのアナログ値が700未満の場合に「白」と判定します。" line51="     * @param direction 判定するセンサーの方向（右:P0, 左:P1）" line52="     */" line53="    //% block=&quot;%direction のセンサが白だったら&quot;" line54="    //% group=&quot;センサー&quot;" line55="    export function isWhite(direction: SensorDirection): boolean {" line56="        const threshold = 700; // 白と判定するアナログ値のしきい値" line57="        let sensorValue = 0;" line58="" line59="        if (direction == SensorDirection.Left) {" line60="            // 左センサー (P1) の値を読み取る" line61="            sensorValue = pins.analogReadPin(AnalogPin.P1);" line62="        } else {" line63="            // 右センサー (P0) の値を読み取る" line64="            sensorValue = pins.analogReadPin(AnalogPin.P0);" line65="        }" line66="" line67="        // センサーの値がしきい値未満なら true (白)、そうでなければ false を返す" line68="        return sensorValue &lt; threshold;" line69="    }" line70="}" numlines="71"></mutation></block></statement></block></xml>